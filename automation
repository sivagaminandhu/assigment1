from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

# Initialize the WebDriver
driver = webdriver.Chrome()  # Use the appropriate driver for your browser

try:
    # Step 1: Navigate to FitPeo Homepage
    driver.get("https://fitpeo.com")  # Replace with the actual FitPeo homepage URL
    driver.maximize_window()
    print("Navigated to FitPeo Homepage")

    # Step 2: Navigate to Revenue Calculator Page
    calculator_link = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.LINK_TEXT, "Revenue Calculator"))  # Replace with the actual link text
    )
    calculator_link.click()
    print("Navigated to Revenue Calculator Page")

    # Step 3: Scroll to Slider Section
    slider_section = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.ID, "slider-section"))  # Replace with the actual slider section ID or locator
    )
    driver.execute_script("arguments[0].scrollIntoView();", slider_section)
    print("Scrolled to Slider Section")

    # Step 4: Adjust the Slider to 820
    slider = driver.find_element(By.XPATH, "//input[@type='range']")  # Replace with the actual slider locator
    ActionChains(driver).click_and_hold(slider).move_by_offset(50, 0).release().perform()  # Adjust the offset as needed
    print("Slider adjusted to 820")

    # Step 5: Update Text Field to 560
    text_field = driver.find_element(By.ID, "slider-value")  # Replace with the actual text field ID
    text_field.clear()
    text_field.send_keys("560")
    time.sleep(1)  # Allow time for the slider to update
    print("Text field updated to 560")

    # Step 6: Validate Slider Value
    slider_value = slider.get_attribute("value")
    if slider_value == "560":
        print("Slider value successfully updated to 560")
    else:
        print(f"Slider value mismatch: {slider_value}")

    # Step 7: Select CPT Codes
    cpt_codes = ["99091", "99453", "99454", "99474"]
    for code in cpt_codes:
        checkbox = driver.find_element(By.XPATH, f"//input[@value='CPT-{code}']")  # Replace with actual checkbox locator
        if not checkbox.is_selected():
            checkbox.click()
    print("CPT codes selected")

    # Step 8: Validate Total Recurring Reimbursement
    reimbursement_header = driver.find_element(By.ID, "total-reimbursement")  # Replace with actual header ID
    reimbursement_value = reimbursement_header.text
    if "$110700" in reimbursement_value:
        print("Total Recurring Reimbursement validated successfully")
    else:
        print(f"Reimbursement value mismatch: {reimbursement_value}")

finally:
    # Close the browser
    driver.quit()
    print("Browser closed")
